@page
@model VeterinaryClinic.Pages.LogsModel
@{
    ViewData["Title"] = "Логистика системы";
}

<head>
    <style>
        :root {
            --primary-color: #4e8cff;
            --secondary-color: #ff5e5f;
            --accent-color: #6c5ce7;
            --light-bg: #f8f9fa;
            --dark-text: #2d3436;
            --light-text: #636e72;
            --white: #ffffff;
            --shadow: 0 10px 30px rgba(0,0,0,0.1);
            --border-radius: 16px;
            --transition: all 0.3s ease;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(to bottom, #bad2ff 0%, rgba(248, 249, 250, 0.7) 100%);
            color: var(--dark-text);
            line-height: 1.6;
        }

        .logs-header {
            text-align: center;
            margin: 60px 0 40px;
            color: var(--dark-text);
            font-size: 2.5rem;
            font-weight: 700;
            position: relative;
        }

            .logs-header::after {
                content: '';
                display: block;
                width: 80px;
                height: 4px;
                background: var(--secondary-color);
                margin: 20px auto;
                border-radius: 2px;
            }

        .logs-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        .filters-container {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
            justify-content: center;
        }

        .search-container {
            flex: 1;
            min-width: 300px;
            max-width: 500px;
        }

        .date-container {
            flex: 1;
            min-width: 300px;
            max-width: 350px;
        }

        .search-input, .date-input {
            padding: 12px 20px;
            width: 100%;
            border: 2px solid var(--primary-color);
            border-radius: 50px;
            font-size: 1rem;
            outline: none;
            transition: var(--transition);
            box-shadow: var(--shadow);
        }

            .search-input:focus, .date-input:focus {
                border-color: var(--accent-color);
                box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.2);
            }

        .logs-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0 15px;
            margin: 30px 0;
        }

            .logs-table thead th {
                background-color: var(--primary-color);
                color: white;
                padding: 15px 20px;
                text-align: left;
                font-weight: 600;
                border: none;
            }

                .logs-table thead th:first-child {
                    border-top-left-radius: var(--border-radius);
                    border-bottom-left-radius: var(--border-radius);
                }

                .logs-table thead th:last-child {
                    border-top-right-radius: var(--border-radius);
                    border-bottom-right-radius: var(--border-radius);
                }

            .logs-table tbody tr {
                background-color: white;
                box-shadow: var(--shadow);
                transition: var(--transition);
                border-radius: var(--border-radius);
            }

                .logs-table tbody tr:hover {
                    transform: translateY(-3px);
                    box-shadow: 0 15px 30px rgba(0,0,0,0.15);
                }

            .logs-table tbody td {
                padding: 20px;
                border: none;
                vertical-align: middle;
                border-top: 1px solid rgba(0,0,0,0.05);
                border-bottom: 1px solid rgba(0,0,0,0.05);
            }

                .logs-table tbody td:first-child {
                    border-left: 1px solid rgba(0,0,0,0.05);
                    border-top-left-radius: var(--border-radius);
                    border-bottom-left-radius: var(--border-radius);
                }

                .logs-table tbody td:last-child {
                    border-right: 1px solid rgba(0,0,0,0.05);
                    border-top-right-radius: var(--border-radius);
                    border-bottom-right-radius: var(--border-radius);
                }

        .log-user {
            font-weight: 600;
            color: var(--dark-text);
            font-size: 1.1rem;
        }

        .log-action {
            color: var(--dark-text);
            font-size: 0.95rem;
            line-height: 1.6;
        }

        .log-timestamp {
            color: var(--light-text);
            display: flex;
            align-items: center;
            font-size: 0.9rem;
        }

            .log-timestamp::before {
                content: '🕒';
                margin-right: 8px;
                font-size: 0.9rem;
            }

        .system-log {
            background-color: rgba(108, 92, 231, 0.05);
        }

        .user-log {
            background-color: rgba(78, 140, 255, 0.05);
        }

        .no-results {
            text-align: center;
            padding: 40px;
            color: var(--light-text);
            font-size: 1.2rem;
        }

        /* Анимации */
        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .animate-fade {
            animation: fadeIn 0.6s ease-out forwards;
        }

        /* Адаптивность */
        @@media (max-width: 768px) {
            .logs-table {
                display: block;
                overflow-x: auto;
            }

            .filters-container {
                flex-direction: column;
                align-items: stretch;
            }
        }
    </style>
</head>


<div class="logs-container">
    <h1 class="logs-header">Логи системы</h1>

    <div class="filters-container">
        <div class="search-container">
            <input type="text" id="searchInput" class="search-input" placeholder="Поиск по пользователю..."
                   value="@Model.SearchString" />
        </div>
        <div class="date-container">
            <input type="date" id="dateInput" class="date-input"
                   value="@(Model.SelectedDate?.ToString("yyyy-MM-dd"))" />
        </div>
    </div>

    <table class="logs-table">
        <thead>
            <tr>
                <th>Пользователь</th>
                <th>Действие</th>
                <th>Время</th>
            </tr>
        </thead>
        <tbody id="logsTableBody">
            @foreach (var log in Model.Logs)
            {
                <tr class="animate-fade @(log.User == null ? "system-log" : "user-log")"
                    data-user="@(log.User?.Username ?? "System")"
                    data-date="@log.Timestamp?.ToString("yyyy-MM-dd")">
                    <td>
                        <div class="log-user">@(log.User?.Username ?? "System")</div>
                    </td>
                    <td>
                        <div class="log-action">@log.Action</div>
                    </td>
                    <td>
                        <span class="log-timestamp">@log.Timestamp</span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div id="noResults" class="no-results" style="display: none;">
        Ничего не найдено
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const dateInput = document.getElementById('dateInput');
            const logsTableBody = document.getElementById('logsTableBody');
            const noResults = document.getElementById('noResults');
            const logRows = Array.from(logsTableBody.getElementsByTagName('tr'));

            // Плавное появление элементов
            logRows.forEach((el, index) => {
                el.style.animationDelay = `${index * 0.05}s`;
            });

            function filterLogs() {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedDate = dateInput.value;
                let hasResults = false;

                logRows.forEach(row => {
                    const username = row.getAttribute('data-user').toLowerCase();
                    const logDate = row.getAttribute('data-date');

                    const matchesSearch = searchTerm === '' || username.includes(searchTerm);
                    const matchesDate = selectedDate === '' || logDate === selectedDate;

                    if (matchesSearch && matchesDate) {
                        row.style.display = '';
                        hasResults = true;
                    } else {
                        row.style.display = 'none';
                    }
                });

                noResults.style.display = hasResults ? 'none' : 'block';
            }

            searchInput.addEventListener('input', filterLogs);
            dateInput.addEventListener('change', filterLogs);
        });
    </script>
}